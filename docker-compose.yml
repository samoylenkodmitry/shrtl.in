services:
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8080:8080"  # Optional if only accessed via proxy
    environment:
      - DOMAIN=$DOMAIN
      - DATABASE_URL=$DATABASE_URL
      - DATABASE_USER_FILE=/run/secrets/db_username
      - DATABASE_PASSWORD_FILE=/run/secrets/db_password
    depends_on:
      - postgres
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy.VIRTUAL_HOST=$DOMAIN"
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy.PROXY_PASS=http://backend:8080"
    secrets:
      - db_username
      - db_password

  frontend:
    build: ./composeApp
    depends_on:
      - nginx-proxy
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy.VIRTUAL_HOST=$DOMAIN"
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy.PROXY_PASS=http://frontend:80"

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      - dhparam:/etc/nginx/dhparam
      - /var/run/docker.sock:/tmp/docker.sock:ro

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
      - dhparam:/etc/nginx/dhparam
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy
    environment:
      NGINX_PROXY_CONTAINER: "nginx-proxy"
      NGINX_DOCKER_GEN_CONTAINER: ""
  
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER_FILE: /run/secrets/db_username
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: shrtlin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_username
      - db_password

volumes:
  certbot-etc:
  certbot-var:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /tmp/dhparam
      o: bind
  postgres_data:

secrets:
  db_username:
    file: ./db_username.txt
  db_password:
    file: ./db_password.txt